<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- com.callor.sec.service.auth 패키지의 정보는 rootcontext 에서 -->
	<!-- UserDetailServiceImpl 을 scan 하기 위한 설정 -->
	<context:component-scan
		base-package="com.callor.sec.service.auth">
	</context:component-scan>

	<!-- 로그인이 안되어 있으면 자동으로 spring 제공하는 security 창 띄우기 -->

	<!-- form-login 속성중에 login-processing-url 속성은 반드시 /user/login 으로 설정해주어야 
		한다 실제 form action 은 ${rootPath}/user/login 형식으로 지정되지만 임의로 form tag 에 action 
		을 지정하는 것과는 다르게 동작을 한다 login-prosession-url 에 설정된 /user/login 주소는 spring security 
		가 중간에 가로채기하여 security login 절차가 수행된다 대신 project controller 에 /user/login 
		POST method 는 없어야한다 -->
	<!-- sec:intercept-url 가장 긴 것부터 순서대로 -->
	<sec:http auto-config="true" use-expressions="true">

		<sec:csrf disabled="false" />
		<sec:intercept-url pattern="/static/**"	access="permitAll" />

		<sec:intercept-url pattern="/user/login" access="permitAll" />
		<sec:intercept-url pattern="/user/join" access="permitAll" />
		<sec:intercept-url pattern="/guest" access="permitAll" />
		<sec:intercept-url pattern="/" access="permitAll" />
		<sec:intercept-url pattern="/**" access="isAuthenticated()" />


		<sec:form-login login-page="/user/login?error=LOGIN_NEED"
			login-processing-url="/user/login" username-parameter="username"
			password-parameter="password" />

		<sec:logout invalidate-session="true"
			logout-success-url="/" delete-cookies="JSESSIONID" />
	</sec:http>
	
	<!-- 로그인 실행을 위한 Bean 등록 -->
	<sec:authentication-manager>
		<sec:authentication-provider ref="authenticationProvider" />
	</sec:authentication-manager>

	<!-- <sec:authentication-manager> <sec:authentication-provider> <sec:user-service> 
		{noop} 암호화 하지 않겠다, 이하의 정보로 로그인하면 ADMIN 인가(권한) <sec:user name="root" password="{noop}!Korea8080" 
		authorities="ROLE_ADMIN"/> </sec:user-service> </sec:authentication-provider> 
		</sec:authentication-manager> -->
</beans>
